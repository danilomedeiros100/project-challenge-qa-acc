[35mDEBUG   [0m root:conftest.py:18 üë§ Criando novo usu√°rio para o teste: usuario_teste_3842
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): demoqa.com:443
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:544 https://demoqa.com:443 "POST /Account/v1/User HTTP/1.1" 201 92
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): demoqa.com:443
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:544 https://demoqa.com:443 "POST /Account/v1/GenerateToken HTTP/1.1" 200 288
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): demoqa.com:443
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:544 https://demoqa.com:443 "POST /Account/v1/Authorized HTTP/1.1" 200 4
[35mDEBUG   [0m root:conftest.py:36 ‚úÖ Usu√°rio criado e autorizado com sucesso. ID: 266ce4c9-3e2d-4d0f-a35c-5270fc0e0af2, Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6InVzdWFyaW9fdGVzdGVfMzg0MiIsInBhc3N3b3JkIjoiVGVzdGVAMTIzIiwiaWF0IjoxNzM5MzczNTkwfQ.a7vEXbkTQFH3dqTBVQexQmWLUKko8xx1i52ZIeoTP8U
[35mDEBUG   [0m pytest_bdd.scenario:scenario.py:150 Adding providers for fixture 'pytestbdd_stepimpl_given_que estou autenticado na API': [<FixtureDef argname='pytestbdd_stepdef_given_que estou autenticado na API' scope='function' baseid='tests/api/test_reservation.py'>]
[32mINFO    [0m utils.logger:test_reservation.py:13 üü¢ [IN√çCIO] Teste de Autentica√ß√£o do Usu√°rio
[35mDEBUG   [0m utils.logger:test_reservation.py:14 üîë Verificando usu√°rio... ID: 266ce4c9-3e2d-4d0f-a35c-5270fc0e0af2 | Token: eyJhbGciOiJIUzI1NiIs...
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): demoqa.com:443
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:544 https://demoqa.com:443 "POST /Account/v1/Authorized HTTP/1.1" 200 4
[32mINFO    [0m utils.logger:test_reservation.py:18 ‚úÖ Usu√°rio autenticado com sucesso!
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): demoqa.com:443
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:544 https://demoqa.com:443 "GET /Account/v1/User/266ce4c9-3e2d-4d0f-a35c-5270fc0e0af2 HTTP/1.1" 200 92
[35mDEBUG   [0m utils.logger:api_client.py:36 üì• Resposta da API ao obter detalhes do usu√°rio: 200 - {"userId":"266ce4c9-3e2d-4d0f-a35c-5270fc0e0af2","username":"usuario_teste_3842","books":[]}
[32mINFO    [0m utils.logger:test_reservation.py:36 ‚úÖ Usu√°rio validado com sucesso para reserva de livros!
[35mDEBUG   [0m pytest_bdd.scenario:scenario.py:150 Adding providers for fixture 'pytestbdd_stepimpl_given_tenho o ID de dois livros dispon√≠veis': [<FixtureDef argname='pytestbdd_stepdef_given_tenho o ID de dois livros dispon√≠veis' scope='function' baseid='tests/api/test_reservation.py'>]
[32mINFO    [0m utils.logger:test_reservation.py:41 üìö Buscando livros dispon√≠veis...
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): demoqa.com:443
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:544 https://demoqa.com:443 "GET /BookStore/v1/Books HTTP/1.1" 200 4514
[32mINFO    [0m utils.logger:test_reservation.py:49 üìñ Livros selecionados para reserva: ['9781449325862', '9781449331818']
[35mDEBUG   [0m pytest_bdd.scenario:scenario.py:150 Adding providers for fixture 'pytestbdd_stepimpl_when_envio uma requisi√ß√£o para reservar os livros': [<FixtureDef argname='pytestbdd_stepdef_when_envio uma requisi√ß√£o para reservar os livros' scope='function' baseid='tests/api/test_reservation.py'>]
[32mINFO    [0m utils.logger:test_reservation.py:54 üìù Solicitando reserva dos livros...
[35mDEBUG   [0m utils.logger:api_client.py:53 üì§ Enviando requisi√ß√£o para reservar livros. Payload: {'userId': '266ce4c9-3e2d-4d0f-a35c-5270fc0e0af2', 'collectionOfIsbns': [{'isbn': '9781449325862'}, {'isbn': '9781449331818'}]}
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): demoqa.com:443
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:544 https://demoqa.com:443 "POST /BookStore/v1/Books HTTP/1.1" 201 61
[35mDEBUG   [0m utils.logger:api_client.py:56 üì• Resposta recebida da API: 201 - {"books":[{"isbn":"9781449325862"},{"isbn":"9781449331818"}]}
[32mINFO    [0m utils.logger:test_reservation.py:57 üì§ Resposta recebida da API (201):
{
    "books": [
        {
            "isbn": "9781449325862"
        },
        {
            "isbn": "9781449331818"
        }
    ]
}
[35mDEBUG   [0m pytest_bdd.scenario:scenario.py:150 Adding providers for fixture 'pytestbdd_stepimpl_then_a API deve confirmar a reserva dos livros': [<FixtureDef argname='pytestbdd_stepdef_then_a API deve confirmar a reserva dos livros' scope='function' baseid='tests/api/test_reservation.py'>]
[32mINFO    [0m utils.logger:test_reservation.py:63 ‚úÖ Reserva confirmada com sucesso!
[35mDEBUG   [0m pytest_bdd.scenario:scenario.py:150 Adding providers for fixture 'pytestbdd_stepimpl_then_os livros devem estar no perfil do usu√°rio': [<FixtureDef argname='pytestbdd_stepdef_then_os livros devem estar no perfil do usu√°rio' scope='function' baseid='tests/api/test_reservation.py'>]
[32mINFO    [0m utils.logger:test_reservation.py:68 üîç Validando se os livros est√£o no perfil do usu√°rio...
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): demoqa.com:443
[35mDEBUG   [0m urllib3.connectionpool:connectionpool.py:544 https://demoqa.com:443 "GET /Account/v1/User/266ce4c9-3e2d-4d0f-a35c-5270fc0e0af2 HTTP/1.1" 200 1225
[35mDEBUG   [0m utils.logger:api_client.py:36 üì• Resposta da API ao obter detalhes do usu√°rio: 200 - {"userId":"266ce4c9-3e2d-4d0f-a35c-5270fc0e0af2","username":"usuario_teste_3842","books":[{"isbn":"9781449325862","title":"Git Pocket Guide","subTitle":"A Working Introduction","author":"Richard E. Silverman","publish_date":"2020-06-04T08:48:39.000Z","publisher":"O'Reilly Media","pages":234,"description":"This pocket guide is the perfect on-the-job companion to Git, the distributed version control system. It provides a compact, readable introduction to Git for new users, as well as a reference to common commands and procedures for those of you with Git exp","website":"http://chimera.labs.oreilly.com/books/1230000000561/index.html"},{"isbn":"9781449331818","title":"Learning JavaScript Design Patterns","subTitle":"A JavaScript and jQuery Developer's Guide","author":"Addy Osmani","publish_date":"2020-06-04T09:11:40.000Z","publisher":"O'Reilly Media","pages":254,"description":"With Learning JavaScript Design Patterns, you'll learn how to write beautiful, structured, and maintainable JavaScript by applying classical and modern design patterns to the language. If you want to keep your code efficient, more manageable, and up-to-da","website":"http://www.addyosmani.com/resources/essentialjsdesignpatterns/book/"}]}
[32mINFO    [0m utils.logger:test_reservation.py:75 ‚úÖ Livros reservados confirmados no perfil do usu√°rio!