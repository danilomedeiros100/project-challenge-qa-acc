{"name": "test_reservar_dois_livros_dispon√≠veis", "status": "broken", "statusDetails": {"message": "ValueError: API retornou resposta 200 mas sem token v√°lido!", "trace": "fixturefunc = <function ensure_authentication at 0x102455940>, request = <FixtureRequest for <Function test_reservar_dois_livros_dispon√≠veis>>, kwargs = {}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.venv/lib/python3.13/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests/api/test_reservation.py:17: in ensure_authentication\n    new_token_response = APIClient.generate_token(pytest.user_id, pytest.token)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nusername = 'c9586427-0180-4a6b-9b26-8266f6d4afec'\npassword = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6InVzdWFyaW9fdGVzdGVfOTAxNCIsInBhc3N3b3JkIjoiVGVzdGVAMTIzIiwiaWF0IjoxNzM5MzY3NzM5fQ.E_ha2_VCcatCoieB6t9zvxUvrAofN7W-fPOrlPzM3us'\n\n    @staticmethod\n    def generate_token(username, password):\n        \"\"\"Gera um token de autentica√ß√£o\"\"\"\n        payload = {\"userName\": username, \"password\": password}\n        logging.debug(f\"üì§ Gerando token para usu√°rio: {username}\")\n        response = requests.post(f\"{BASE_URL}/Account/v1/GenerateToken\", json=payload)\n    \n        # Log da resposta para depura√ß√£o\n        logging.debug(f\"üì• Resposta da API ao gerar token: {response.status_code} - {response.text}\")\n    \n        if response.status_code == 200:\n            token = response.json().get(\"token\")\n            if token:\n                logging.debug(f\"‚úÖ Token gerado com sucesso: {token}\")\n                return response\n            else:\n                logging.error(\"‚ùå Erro: API retornou resposta 200 mas sem token v√°lido!\")\n>               raise ValueError(\"API retornou resposta 200 mas sem token v√°lido!\")\nE               ValueError: API retornou resposta 200 mas sem token v√°lido!\n\nutils/api_client.py:33: ValueError"}, "description": "/Users/daniloamedeiros/Desktop/project-challenge-qa-acc/features/api_reservation.feature: Reservar dois livros dispon√≠veis", "attachments": [{"name": "log", "source": "c058a14a-4d48-4c4b-8884-3aa4a96c026e-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "3a2e1ea1-9679-40c6-897b-a98968dc3727-attachment.txt", "type": "text/plain"}], "start": 1739367742677, "stop": 1739367744173, "uuid": "978c505b-cd71-4126-881e-7a69e10a82f6", "historyId": "91b126e08702aa1dbb177c0c6adc4a30", "testCaseId": "91b126e08702aa1dbb177c0c6adc4a30", "fullName": "tests.api.test_reservation#test_reservar_dois_livros_dispon√≠veis", "labels": [{"name": "parentSuite", "value": "tests.api"}, {"name": "suite", "value": "test_reservation"}, {"name": "host", "value": "MacBook-Pro-de-Danilo.local"}, {"name": "thread", "value": "50463-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api.test_reservation"}]}