{"name": "test_reservar_dois_livros_dispon√≠veis", "status": "broken", "statusDetails": {"message": "AttributeError: type object 'APIClient' has no attribute 'get_user_id'", "trace": "fixturefunc = <function ensure_authentication at 0x104fdd800>, request = <FixtureRequest for <Function test_reservar_dois_livros_dispon√≠veis>>, kwargs = {}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.venv/lib/python3.13/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    @given(\"que estou autenticado na API\")\n    def ensure_authentication():\n        \"\"\"Garante que o usu√°rio est√° autenticado e autorizado\"\"\"\n        logging.debug(f\"üîê Verificando autentica√ß√£o do usu√°rio... ID: {pytest.user_id}, Token: {pytest.token}\")\n    \n        # Primeiro, verificar se o usu√°rio est√° autorizado\n        auth_response = APIClient.is_user_authorized(pytest.user_id, pytest.token)\n    \n        if auth_response.status_code != 200:\n            logging.debug(\"üîÑ Token inv√°lido. Tentando regenera√ß√£o...\")\n    \n            if not hasattr(pytest, \"user_name\") or not hasattr(pytest, \"password\"):\n                logging.error(\"‚ùå Credenciais ausentes! O usu√°rio pode n√£o ter sido configurado corretamente.\")\n                raise ValueError(\"Credenciais do usu√°rio n√£o foram armazenadas corretamente.\")\n    \n            new_token_response = APIClient.generate_token(pytest.user_name, pytest.password)\n            assert new_token_response.status_code == 200, f\"Erro ao gerar novo token: {new_token_response.text}\"\n    \n            new_token = new_token_response.json().get(\"token\")\n            assert new_token is not None, \"Erro: API n√£o retornou um novo token v√°lido!\"\n    \n            pytest.token = new_token\n            logging.debug(f\"‚úÖ Novo Token Gerado: {pytest.token}\")\n    \n            # üöÄ **Agora verificamos se o ID do usu√°rio mudou ap√≥s regenerar o token**\n            new_user_response = APIClient.get_user_details(pytest.user_id, pytest.token)\n            if new_user_response.status_code == 200:\n                logging.debug(\"‚úÖ Usu√°rio autenticado corretamente ap√≥s regenera√ß√£o.\")\n            else:\n                logging.debug(\"‚ùå O ID do usu√°rio pode estar incorreto ap√≥s a regenera√ß√£o do token.\")\n>               pytest.user_id = APIClient.get_user_id(pytest.token)  # Tenta recuperar um novo ID\nE               AttributeError: type object 'APIClient' has no attribute 'get_user_id'\n\ntests/api/test_reservation.py:40: AttributeError"}, "description": "/Users/daniloamedeiros/Desktop/project-challenge-qa-acc/features/api_reservation.feature: Reservar dois livros dispon√≠veis", "attachments": [{"name": "log", "source": "9505b709-3776-4727-9f97-4dcc8078559e-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "433a228a-a164-47c8-9db4-364744c47ee8-attachment.txt", "type": "text/plain"}], "start": 1739368569796, "stop": 1739368572402, "uuid": "5568f430-4c83-4da1-be48-956cdcd22a57", "historyId": "91b126e08702aa1dbb177c0c6adc4a30", "testCaseId": "91b126e08702aa1dbb177c0c6adc4a30", "fullName": "tests.api.test_reservation#test_reservar_dois_livros_dispon√≠veis", "labels": [{"name": "parentSuite", "value": "tests.api"}, {"name": "suite", "value": "test_reservation"}, {"name": "host", "value": "MacBook-Pro-de-Danilo.local"}, {"name": "thread", "value": "50699-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api.test_reservation"}]}