{"name": "test_recuperar_os_detalhes_do_usu√°rio_autenticado", "status": "failed", "statusDetails": {"message": "AssertionError: ‚ùå Erro ao criar usu√°rio: {\n      \"code\": \"1204\",\n      \"message\": \"User exists!\"\n  }\nassert 406 == 201\n +  where 406 = <Response [406]>.status_code", "trace": "fixturefunc = <function create_and_authenticate_user at 0x10325e020>, request = <FixtureRequest for <Function test_recuperar_os_detalhes_do_usu√°rio_autenticado>>, kwargs = {}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.venv/lib/python3.13/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    @given(\"que eu tenho um usu√°rio criado e autenticado\")\n    def create_and_authenticate_user():\n        \"\"\"Cria um usu√°rio e gera um token v√°lido para ele\"\"\"\n        logging.info(\"üü¢ [IN√çCIO] Criando e autenticando usu√°rio para consulta de detalhes\")\n    \n        # Criar usu√°rio\n        response = APIClient.create_user(pytest.user_data[\"userName\"], pytest.user_data[\"password\"])\n>       assert response.status_code == 201, f\"‚ùå Erro ao criar usu√°rio: {json.dumps(response.json(), indent=4)}\"\nE       AssertionError: ‚ùå Erro ao criar usu√°rio: {\nE             \"code\": \"1204\",\nE             \"message\": \"User exists!\"\nE         }\nE       assert 406 == 201\nE        +  where 406 = <Response [406]>.status_code\n\ntests/api/test_user_details.py:25: AssertionError"}, "description": "/Users/daniloamedeiros/Desktop/project-challenge-qa-acc/features/api_user_details.feature: Recuperar os detalhes do usu√°rio autenticado", "attachments": [{"name": "log", "source": "97f1ff93-9f0e-4de3-b5cb-b8954565d95f-attachment.txt", "type": "text/plain"}], "start": 1739372551852, "stop": 1739372552440, "uuid": "05ffa117-8f5e-4809-9160-ab36ed1caabe", "historyId": "b7246ae2137298610b6b861c42d092d0", "testCaseId": "b7246ae2137298610b6b861c42d092d0", "fullName": "tests.api.test_user_details#test_recuperar_os_detalhes_do_usu√°rio_autenticado", "labels": [{"name": "parentSuite", "value": "tests.api"}, {"name": "suite", "value": "test_user_details"}, {"name": "host", "value": "MacBook-Pro-de-Danilo.local"}, {"name": "thread", "value": "51740-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api.test_user_details"}]}